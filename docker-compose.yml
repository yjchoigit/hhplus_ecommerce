version: "3.1"

services:
  k6:
    image: loadimpact/k6
    volumes:
      - ./test.js:/scripts/test.js
    entrypoint: [ "k6", "run", "/scripts/test.js" ]

  redis_container:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always

  mysql_container:
    container_name: mysql
    image: mysql:8.0.13
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_ROOT_PASSWORD: test123
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper_container:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka_container:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - "9092:9092"  # 외부 접근 포트
      - "9093:9093"  # 내부 포트
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  # 내부 통신용 리스너 이름
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mysql_data: